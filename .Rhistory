df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target, by.x = "X1", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[11:(11+45)] <- paste(colnames(df_target)[2:47], "_S1", sep = "")
df_links_sib <- merge(df_links_sib, df_target, by.x = "X2", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[(11+46):((11+46)+45)] <- paste(colnames(df_target)[2:47], "_S2", sep = "")
# check math test
sum(!is.na(df_links_sib$mathtest18_S1) & !is.na(df_links_sib$mathtest18_S2))
# check word test
sum(!is.na(df_links_sib$wordtest18_S1) & !is.na(df_links_sib$wordtest18_S2))
# check mh~trust
sum(!is.na(df_links_sib$QN406_S1) & !is.na(df_links_sib$QN406_S2) & !is.na(df_links_sib$QN1001_S1) & !is.na(df_links_sib$QN1001_S2))
# check mh~life_att
sum(!is.na(df_links_sib$QN406_S1) & !is.na(df_links_sib$QN406_S2) & !is.na(df_links_sib$QM501_S1) & !is.na(df_links_sib$QM501_S2))
# check mh~society
sum(!is.na(df_links_sib$QN406_S1) & !is.na(df_links_sib$QN406_S2) & !is.na(df_links_sib$WV101_S1) & !is.na(df_links_sib$WV101_S2))
# check mh~math
sum(!is.na(df_links_sib$QN406_S1) & !is.na(df_links_sib$QN406_S2) & !is.na(df_links_sib$mathtest18_S1) & !is.na(df_links_sib$mathtest18_S2))
View(df_target)
library(haven)
df_links <- read.csv("siblinks.csv", sep = ",")
df_p2018_c <- read_sas("cfps2018person_202012.sas7bdat")
df_c2018_c <- read_sas("cfps2018childproxy_202012.sas7bdat")
df_target <- df_p2018_c[,c("PID",
#("QM2..$", names(df_p2018_c), value=TRUE), #personality
grep("QN4..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #mental health
#grep("Q..T...$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),
grep("QM1..M$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #self-esteem
grep("QM5..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #life attitudes
grep("QN100.", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# trust tendency
grep("WV10.$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# attitudes towards society
"mathtest18", # math test
"wordtest18"  # word test
),]
df_target[df_target <= -1] <- as.numeric(NA)
df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target, by.x = "X1", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[11:(11+45)] <- paste(colnames(df_target)[2:47], "_S1", sep = "")
df_links_sib <- merge(df_links_sib, df_target, by.x = "X2", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[(11+46):((11+46)+45)] <- paste(colnames(df_target)[2:47], "_S2", sep = "")
library(haven)
df_links <- read.csv("siblinks.csv", sep = ",")
df_p2018_c <- read_sas("cfps2018person_202012.sas7bdat")
df_c2018_c <- read_sas("cfps2018childproxy_202012.sas7bdat")
df_target <- df_p2018_c[,c("PID",
#("QM2..$", names(df_p2018_c), value=TRUE), #personality
grep("QN4..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #mental health
#grep("Q..T...$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),
#grep("QM1..M$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #self-esteem
#grep("QM5..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #life attitudes
#grep("QN100.", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# trust tendency
#grep("WV10.$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# attitudes towards society
"mathtest18", # math test
"wordtest18"  # word test
),]
df_target[df_target <= -1] <- as.numeric(NA)
View(df_links)
View(df_target)
df_target <- df_p2018_c[,c("PID",
#("QM2..$", names(df_p2018_c), value=TRUE), #personality
grep("QN4..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #mental health
#grep("Q..T...$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),
#grep("QM1..M$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #self-esteem
#grep("QM5..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #life attitudes
#grep("QN100.", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# trust tendency
#grep("WV10.$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# attitudes towards society
"mathtest18", # math test
"wordtest18",
"CFPS2018EDUY_IM"# word test
),]
df_target <- df_p2018_c[,c("PID",
#("QM2..$", names(df_p2018_c), value=TRUE), #personality
grep("QN4..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #mental health
#grep("Q..T...$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),
#grep("QM1..M$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #self-esteem
#grep("QM5..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #life attitudes
#grep("QN100.", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# trust tendency
#grep("WV10.$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# attitudes towards society
"mathtest18", # math test
"wordtest18",
"CFPS2018EDUY_IM"# word test
),]
View(df_links)
View(df_target)
df_target[df_target <= -1] <- as.numeric(NA)
df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target, by.x = "X1", by.y = "PID", all.x = TRUE)
View(df_links_sib)
colnames(df_links_sib)[11:22] <- paste(colnames(df_target)[2:13], "_S1", sep = "")
df_links_sib <- merge(df_links_sib, df_target, by.x = "X2", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[23:34] <- paste(colnames(df_target)[2:13], "_S2", sep = "")
View(df_links_sib)
df_target[df_target <= -1] <- as.numeric(NA)
df_target$QN406_r <- 5 - df_target$QN406
df_target$QN407_r <- 5 - df_target$QN407
df_target$qn411_r <- 5 - df_target$qn411
df_target$qn414_r <- 5 - df_target$qn414
df_target$qn418_r <- 5 - df_target$qn418
df_target$qn420_r <- 5 - df_target$qn420
View(df_target)
df_target$MH <- apply(df_target[,c(6,8,14:19)],1,mean)
View(df_target)
View(df_target)
names(df_target)
df_target_c <- df_target[,c(1,1:13,20)]
df_target_c <- df_target[,c(1,11:13,20)]
df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X1", by.y = "PID", all.x = TRUE)
df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X1", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[11:14] <- paste(colnames(df_target)[2:5], "_S1", sep = "")
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X2", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[23:26] <- paste(colnames(df_target)[2:5], "_S2", sep = "")
colnames(df_links_sib)[15:18] <- paste(colnames(df_target)[2:5], "_S2", sep = "")
df_links_sib$rowid <- 1:nrow(df_links_sib)
View(df_links_sib)
names(df_links_sib)
names(df_links_sib)
names(df_links_sib)
df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X1", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[11:14] <- paste(colnames(df_target_c)[2:5], "_S1", sep = "")
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X2", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[15:18] <- paste(colnames(df_target_c)[2:5], "_S2", sep = "")
df_links_sib$rowid <- 1:nrow(df_links_sib)
names(df_links_sib)
df_links_sib <- df_links_sib[,c(19,8,5,10,7,11:18)]
View(df_links_sib)
df_links_clean <- df_links_sib[complete.cases(df_links_sib),]
# run discord model
library(discord)
names(df_links_clean)
df_ final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = "mathtest18",
id = "rowid",
sex = "gender",
pair_identifiers = c("_S1", "_S2"))
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = "mathtest18",
id = "rowid",
sex = "gender",
pair_identifiers = c("_S1", "_S2"))
df_links_clean$gender_S1 <- as.factor(df_links_clean$gender_S1)
View(df_links_clean)
df_links_clean$gender_S2 <- as.factor(df_links_clean$gender_S2)
# run discord model
library(discord)
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = "mathtest18",
id = "rowid",
sex = "gender",
pair_identifiers = c("_S1", "_S2"))
?discord_data
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = "mathtest18",
id = "rowid",
sex = "gender",
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
View(df_links_clean)
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","CFPS_2018EDUY_IM","birthyear"),
id = "rowid",
sex = "gender",
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","CFPS_2018EDUY_IM","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","CFPS_2018EDUY_IM","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
df_target[df_target <= -1] <- as.numeric(NA)
df_target$QN406_r <- 5 - df_target$QN406
df_target$QN407_r <- 5 - df_target$QN407
df_target$qn411_r <- 5 - df_target$qn411
df_target$qn414_r <- 5 - df_target$qn414
df_target$qn418_r <- 5 - df_target$qn418
df_target$qn420_r <- 5 - df_target$qn420
df_target$MH <- apply(df_target[,c(6,8,14:19)],1,mean)
df_target_c <- df_target[,c(1,11:13,20)]
df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X1", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[11:14] <- paste(colnames(df_target_c)[2:5], "_S1", sep = "")
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X2", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[15:18] <- paste(colnames(df_target_c)[2:5], "_S2", sep = "")
df_links_sib$rowid <- 1:nrow(df_links_sib)
df_links_sib <- df_links_sib[,c(19,8,5,10,7,11:18)]
df_links_clean <- df_links_sib[complete.cases(df_links_sib),]
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","CFPS_2018EDUY_IM","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","CFPS_2018EDUY_IM","birthyear"),
id = "rowid",
sex = NULL,
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "none")
names(df_links_clean)
sum(unique(df_links_clean$rowid))
unique(df_links_clean$rowid)
#df_links_clean$gender_S1 <- as.factor(df_links_clean$gender_S1)
#df_links_clean$gender_S2 <- as.factor(df_links_clean$gender_S2)
colnames(df_links_clean$CFPS2018EDUY_IM_S1) <- "edu_S1"
#df_links_clean$gender_S1 <- as.factor(df_links_clean$gender_S1)
#df_links_clean$gender_S2 <- as.factor(df_links_clean$gender_S2)
names(df_links_clean$CFPS2018EDUY_IM_S1) <- "edu_S1"
names(df_links_clean$CFPS2018EDUY_IM_S2) <- "edu_S2"
names(df_links_clean)
#df_links_clean$gender_S1 <- as.factor(df_links_clean$gender_S1)
#df_links_clean$gender_S2 <- as.factor(df_links_clean$gender_S2)
colnames(df_links_clean)[8] <- "edu_S1"
colnames(df_links_clean)[12] <- "edu_S2"
# run discord model
library(discord)
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","CFPS_2018EDUY_IM","birthyear"),
id = "rowid",
sex = NULL,
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "none")
View(df_links_clean)
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = NULL,
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "none")
View(df_final)
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "race")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "gender")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"))
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
names(df_final)
discord_regression(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
?discord_regression
discord_regression(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"))
discord_regression(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = NULL,
race = NULL,
pair_identifiers = c("_S1", "_S2"))
discord_regression(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = NULL,
race = NULL,
pair_identifiers = c("_S1", "_S2")) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+mathtest18_mean+mathtest18_diff, data = df_final)
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+mathtest18_mean+mathtest18_diff, data = df_final) |> summary()
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+mathtest18_mean+mathtest18_diff, data = df_final) |> summary()
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> summary()
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear","wordtest18"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
View(df_links_clean)
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear","wordtest18"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("edu","birthyear","wordtest18"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear"),
id = "rowid",
sex = "gender",
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "sex")
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear","wordtest18"),
id = "rowid",
sex = NULL,
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "none")
lm(MH_mean~edu_mean+birthyear_mean+wordtest18_mean, data = df_final) |> summary()
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+wordtest18_mean+mathtest18_diff, data = df_final) |> summary()
#data cleaning
df_target <- df_p2018_c[,c("PID",
#("QM2..$", names(df_p2018_c), value=TRUE), #personality
grep("QN4..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #mental health
#grep("Q..T...$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),
#grep("QM1..M$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #self-esteem
#grep("QM5..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #life attitudes
#grep("QN100.", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# trust tendency
#grep("WV10.$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# attitudes towards society
"mathtest18", # math test
"wordtest18",
"CFPS2018EDUY_IM"# word test
),]
df_target[df_target <= -1] <- as.numeric(NA)
df_target$QN406_r <- 5 - df_target$QN406
df_target$QN407_r <- 5 - df_target$QN407
df_target$qn411_r <- 5 - df_target$qn411
df_target$qn414_r <- 5 - df_target$qn414
df_target$qn418_r <- 5 - df_target$qn418
df_target$qn420_r <- 5 - df_target$qn420
df_target$MH <- apply(df_target[,c(6,8,14:19)],1,mean)
df_target_c <- df_target[,c(1,11:13,20)]
df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X1", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[11:14] <- paste(colnames(df_target_c)[2:5], "_S1", sep = "")
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X2", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[15:18] <- paste(colnames(df_target_c)[2:5], "_S2", sep = "")
df_links_sib$rowid <- 1:nrow(df_links_sib)
df_links_sib <- df_links_sib[,c(19,8,5,10,7,11:18)]
df_links_clean <- df_links_sib[complete.cases(df_links_sib),]
df_links_clean <- df_links_clean[df_links_clean$birthyear_S1<2000 & df_links_clean$birthyear_S2<2000,]
colnames(df_links_clean)[8] <- "edu_S1"
colnames(df_links_clean)[12] <- "edu_S2"
# run discord model
library(discord)
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear","wordtest18"),
id = "rowid",
sex = NULL,
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "none")
# mathtest
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+mathtest18_mean+mathtest18_diff, data = df_final) |> summary()
lm(MH_mean~edu_mean+birthyear_mean+wordtest18_mean, data = df_final) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+wordtest18_mean+mathtest18_diff, data = df_final) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+wordtest18_mean+wordtest18_diff, data = df_final) |> summary()
# mathtest
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> summary()
#data cleaning
df_target <- df_p2018_c[,c("PID",
#("QM2..$", names(df_p2018_c), value=TRUE), #personality
grep("QN4..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #mental health
#grep("Q..T...$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),
#grep("QM1..M$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #self-esteem
#grep("QM5..$", names(df_p2018_c), value=TRUE, ignore.case = TRUE), #life attitudes
#grep("QN100.", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# trust tendency
#grep("WV10.$", names(df_p2018_c), value=TRUE, ignore.case = TRUE),# attitudes towards society
"mathtest18", # math test
"wordtest18",
"CFPS2018EDUY_IM"# word test
),]
df_target[df_target <= -1] <- as.numeric(NA)
df_target$QN406_r <- 5 - df_target$QN406
df_target$QN407_r <- 5 - df_target$QN407
df_target$qn411_r <- 5 - df_target$qn411
df_target$qn414_r <- 5 - df_target$qn414
df_target$qn418_r <- 5 - df_target$qn418
df_target$qn420_r <- 5 - df_target$qn420
df_target$MH <- apply(df_target[,c(6,8,14:19)],1,mean)
df_target_c <- df_target[,c(1,11:13,20)]
df_links_sib <- df_links
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X1", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[11:14] <- paste(colnames(df_target_c)[2:5], "_S1", sep = "")
df_links_sib <- merge(df_links_sib, df_target_c, by.x = "X2", by.y = "PID", all.x = TRUE)
colnames(df_links_sib)[15:18] <- paste(colnames(df_target_c)[2:5], "_S2", sep = "")
df_links_sib$rowid <- 1:nrow(df_links_sib)
df_links_sib <- df_links_sib[,c(19,8,5,10,7,11:18)]
df_links_clean <- df_links_sib[complete.cases(df_links_sib),]
#df_links_clean <- df_links_clean[df_links_clean$birthyear_S1<2000 & df_links_clean$birthyear_S2<2000,]
#df_links_clean$gender_S1 <- as.factor(df_links_clean$gender_S1)
#df_links_clean$gender_S2 <- as.factor(df_links_clean$gender_S2)
colnames(df_links_clean)[8] <- "edu_S1"
colnames(df_links_clean)[12] <- "edu_S2"
# run discord model
library(discord)
df_final <- discord_data(data = df_links_clean,
outcome = "MH",
predictors = c("mathtest18","edu","birthyear","wordtest18"),
id = "rowid",
sex = NULL,
race = NULL,
pair_identifiers = c("_S1", "_S2"),
demographics = "none")
# mathtest
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+mathtest18_mean+mathtest18_diff, data = df_final) |> summary()
lm(MH_mean~edu_mean+birthyear_mean+wordtest18_mean, data = df_final) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+wordtest18_mean+wordtest18_diff, data = df_final) |> summary()
# mathtest
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> prettify_regression_results()
prettify_regression_results <- function(regression_object) {
regression_object %>%
gtsummary::tbl_regression(intercept=TRUE) %>%
gtsummary::add_glance_source_note(
label = list(statistic ~ "F-statistic",
df  ~ "DF1",
df.residual  ~ "DF2"),
include = c(r.squared, statistic, df, df.residual, p.value, nobs)
) %>%
gtsummary::modify_header(
statistic ~ "**t-statistic**", p.value ~ "**p-value**"
)
}
# mathtest
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> prettify_regression_results()
library(dplyr)
prettify_regression_results <- function(regression_object) {
regression_object %>%
gtsummary::tbl_regression(intercept=TRUE) %>%
gtsummary::add_glance_source_note(
label = list(statistic ~ "F-statistic",
df  ~ "DF1",
df.residual  ~ "DF2"),
include = c(r.squared, statistic, df, df.residual, p.value, nobs)
) %>%
gtsummary::modify_header(
statistic ~ "**t-statistic**", p.value ~ "**p-value**"
)
}
# mathtest
lm(MH_mean~edu_mean+birthyear_mean+mathtest18_mean, data = df_final) |> prettify_regression_results()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+mathtest18_mean+mathtest18_diff, data = df_final) |> summary()
lm(MH_diff~edu_mean+birthyear_mean+MH_mean+mathtest18_mean+mathtest18_diff, data = df_final) |> prettify_regression_results()
View(df_links_clean)
View(df_target_c)
cor(df_target_c[,2:5], use = "complete")
